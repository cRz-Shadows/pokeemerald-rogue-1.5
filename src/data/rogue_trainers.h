#include "constants/event_objects.h"
#include "constants/layouts.h"
#include "constants/maps.h"
#include "constants/pokemon.h"
#include "constants/weather.h"

#define ENCOUNTER_MAP(id, map) { .encounterId=id, .layout=LAYOUT_##map, .group=MAP_GROUP(map), .num=MAP_NUM(map) }

const u8 gRogueTypeWeatherTable[] = 
{
    [TYPE_NONE] = WEATHER_NONE,
    [TYPE_NORMAL] = WEATHER_NONE,
    [TYPE_FIGHTING] = WEATHER_SUNNY,
    [TYPE_FLYING] = WEATHER_NONE,
    [TYPE_POISON] = WEATHER_SHADE,
    [TYPE_GROUND] = WEATHER_SANDSTORM,
    [TYPE_ROCK] = WEATHER_SANDSTORM,
    [TYPE_BUG] = WEATHER_SHADE,
    [TYPE_GHOST] = WEATHER_VOLCANIC_ASH,
    [TYPE_STEEL] = WEATHER_SANDSTORM,
    [TYPE_MYSTERY] = WEATHER_UNDERWATER_BUBBLES,
    [TYPE_FIRE] = WEATHER_DROUGHT,
    [TYPE_WATER] = WEATHER_DOWNPOUR,
    [TYPE_GRASS] = WEATHER_LEAVES,
    [TYPE_ELECTRIC] = WEATHER_RAIN_THUNDERSTORM,
    [TYPE_PSYCHIC] = WEATHER_FOG_HORIZONTAL,
    [TYPE_ICE] = WEATHER_SNOW,
    [TYPE_DRAGON] = WEATHER_DROUGHT,
    [TYPE_DARK] = WEATHER_VOLCANIC_ASH,
#ifdef ROGUE_EXPANSION
    [TYPE_FAIRY] = WEATHER_FOG_DIAGONAL,
#endif
};

const struct RogueEncounterMap gRogueTypeToEliteRoom[] = 
{
    [TYPE_NONE] = ENCOUNTER_MAP(0, ROGUE_BOSS_11),
    [TYPE_NORMAL] = ENCOUNTER_MAP(0, ROGUE_BOSS_8),
    [TYPE_FIGHTING] = ENCOUNTER_MAP(0, ROGUE_BOSS_8),
    [TYPE_FLYING] = ENCOUNTER_MAP(0, ROGUE_BOSS_8),
    [TYPE_POISON] = ENCOUNTER_MAP(0, ROGUE_BOSS_9),
    [TYPE_GROUND] = ENCOUNTER_MAP(0, ROGUE_BOSS_11),
    [TYPE_ROCK] = ENCOUNTER_MAP(0, ROGUE_BOSS_11),
    [TYPE_BUG] = ENCOUNTER_MAP(0, ROGUE_BOSS_9),
    [TYPE_GHOST] = ENCOUNTER_MAP(0, ROGUE_BOSS_9),
    [TYPE_STEEL] = ENCOUNTER_MAP(0, ROGUE_BOSS_11),
    [TYPE_MYSTERY] = ENCOUNTER_MAP(0, ROGUE_BOSS_10),
    [TYPE_FIRE] = ENCOUNTER_MAP(0, ROGUE_BOSS_11),
    [TYPE_WATER] = ENCOUNTER_MAP(0, ROGUE_BOSS_10),
    [TYPE_GRASS] = ENCOUNTER_MAP(0, ROGUE_BOSS_8),
    [TYPE_ELECTRIC] = ENCOUNTER_MAP(0, ROGUE_BOSS_8),
    [TYPE_PSYCHIC] = ENCOUNTER_MAP(0, ROGUE_BOSS_9),
    [TYPE_ICE] = ENCOUNTER_MAP(0, ROGUE_BOSS_10),
    [TYPE_DRAGON] = ENCOUNTER_MAP(0, ROGUE_BOSS_11),
    [TYPE_DARK] = ENCOUNTER_MAP(0, ROGUE_BOSS_8),
#ifdef ROGUE_EXPANSION
    [TYPE_FAIRY] = ENCOUNTER_MAP(0, ROGUE_BOSS_10),
#endif
};

// Kinda a gross way of doing it, but was the simplest without hacking it in elsewhere
static const u16 sQuerySpecies_Kanto[] =
{
    SPECIES_BULBASAUR,
    SPECIES_CHARMANDER,
    SPECIES_SQUIRTLE,
    SPECIES_CATERPIE,
    SPECIES_WEEDLE,
    SPECIES_PIDGEY,
    SPECIES_RATTATA,
    SPECIES_SPEAROW,
    SPECIES_EKANS,
    SPECIES_PIKACHU,
    SPECIES_SANDSHREW,
    SPECIES_NIDORAN_F,
    SPECIES_NIDORAN_M,
    SPECIES_CLEFAIRY,
    SPECIES_VULPIX,
    SPECIES_JIGGLYPUFF,
    SPECIES_ZUBAT,
    SPECIES_ODDISH,
    SPECIES_PARAS,
    SPECIES_VENONAT,
    SPECIES_DIGLETT,
    SPECIES_MEOWTH,
    SPECIES_PSYDUCK,
    SPECIES_MANKEY,
    SPECIES_GROWLITHE,
    SPECIES_POLIWAG,
    SPECIES_ABRA,
    SPECIES_MACHOP,
    SPECIES_BELLSPROUT,
    SPECIES_TENTACOOL,
    SPECIES_GEODUDE,
    SPECIES_PONYTA,
    SPECIES_SLOWPOKE,
    SPECIES_MAGNEMITE,
    SPECIES_FARFETCHD,
    SPECIES_DODUO,
    SPECIES_SEEL,
    SPECIES_GRIMER,
    SPECIES_SHELLDER,
    SPECIES_GASTLY,
    SPECIES_ONIX,
    SPECIES_DROWZEE,
    SPECIES_KRABBY,
    SPECIES_VOLTORB,
    SPECIES_EXEGGCUTE,
    SPECIES_CUBONE,
    SPECIES_HITMONLEE,
    SPECIES_HITMONCHAN,
    SPECIES_LICKITUNG,
    SPECIES_KOFFING,
    SPECIES_RHYHORN,
    SPECIES_CHANSEY,
    SPECIES_TANGELA,
    SPECIES_KANGASKHAN,
    SPECIES_HORSEA,
    SPECIES_GOLDEEN,
    SPECIES_STARYU,
    SPECIES_MR_MIME,
    SPECIES_SCYTHER,
    SPECIES_JYNX,
    SPECIES_ELECTABUZZ,
    SPECIES_MAGMAR,
    SPECIES_PINSIR,
    SPECIES_TAUROS,
    SPECIES_MAGIKARP,
    SPECIES_LAPRAS,
    SPECIES_DITTO,
    SPECIES_EEVEE,
    SPECIES_PORYGON,
    SPECIES_OMANYTE,
    SPECIES_KABUTO,
    SPECIES_AERODACTYL,
    SPECIES_SNORLAX,
    SPECIES_ARTICUNO,
    SPECIES_ZAPDOS,
    SPECIES_MOLTRES,
    SPECIES_DRATINI,
    SPECIES_MEWTWO,
    SPECIES_MEW,
#ifdef ROGUE_EXPANSION
    SPECIES_RATTATA_ALOLAN,
    SPECIES_SANDSHREW_ALOLAN,
    SPECIES_VULPIX_ALOLAN,
    SPECIES_DIGLETT_ALOLAN,
    SPECIES_MEOWTH_ALOLAN,
    SPECIES_GEODUDE_ALOLAN,
    SPECIES_GRIMER_ALOLAN,

    SPECIES_MEOWTH_GALARIAN,
    SPECIES_PONYTA_GALARIAN,
    SPECIES_SLOWPOKE_GALARIAN,
    SPECIES_FARFETCHD_GALARIAN,
    SPECIES_MR_MIME_GALARIAN,
    SPECIES_ARTICUNO_GALARIAN,
    SPECIES_ZAPDOS_GALARIAN,
    SPECIES_MOLTRES_GALARIAN,
#endif
};


static const u16 sQuerySpecies_Blue[] =
{
    SPECIES_PIKACHU,
    SPECIES_NIDORAN_M,
    SPECIES_CLEFAIRY,
    SPECIES_VULPIX,
    SPECIES_ODDISH,
    SPECIES_GROWLITHE,
    SPECIES_POLIWAG,
    SPECIES_ABRA,
    SPECIES_MACHOP,
    SPECIES_GEODUDE,
    SPECIES_GASTLY,
    SPECIES_EXEGGCUTE,
    SPECIES_RHYHORN,
    SPECIES_HORSEA,
    SPECIES_ARTICUNO,
    SPECIES_ZAPDOS,
    SPECIES_MOLTRES,
    SPECIES_MEWTWO,
    SPECIES_STARYU,
    SPECIES_SCYTHER,
    SPECIES_JYNX,
    SPECIES_ELECTABUZZ,
    SPECIES_MAGMAR,
    SPECIES_EEVEE,
    SPECIES_ONIX,
    SPECIES_MAGNEMITE,
    SPECIES_SLOWPOKE,
};

static const u16 sQuerySpecies_ProfOak[] =
{
    SPECIES_BULBASAUR,
    SPECIES_CHARMANDER,
    SPECIES_SQUIRTLE,
    SPECIES_PIDGEY,
    SPECIES_PIKACHU,
    SPECIES_NIDORAN_F,
    SPECIES_ZUBAT,
    SPECIES_DIGLETT,
    SPECIES_PSYDUCK,
    SPECIES_MANKEY,
    SPECIES_TENTACOOL,
    SPECIES_PONYTA,
    SPECIES_FARFETCHD,
    SPECIES_DODUO,
    SPECIES_SEEL,
    SPECIES_GRIMER,
    SPECIES_SHELLDER,
    SPECIES_DROWZEE,
    SPECIES_KRABBY,
    SPECIES_VOLTORB,
    SPECIES_CUBONE,
    SPECIES_HITMONLEE,
    SPECIES_HITMONCHAN,
    SPECIES_LICKITUNG,
    SPECIES_KOFFING,
    SPECIES_CHANSEY,
    SPECIES_TANGELA,
    SPECIES_KANGASKHAN,
    SPECIES_MR_MIME,
    SPECIES_PINSIR,
    SPECIES_TAUROS,
    SPECIES_MAGIKARP,
    SPECIES_LAPRAS,
    SPECIES_DITTO,
    SPECIES_PORYGON,
    SPECIES_OMANYTE,
    SPECIES_KABUTO,
    SPECIES_AERODACTYL,
    SPECIES_SNORLAX,
    SPECIES_ARTICUNO,
    SPECIES_ZAPDOS,
    SPECIES_MOLTRES,
    SPECIES_DRATINI,
    SPECIES_MEWTWO,
    SPECIES_MEW,
#ifdef ROGUE_EXPANSION
    SPECIES_SANDSHREW_ALOLAN,
    SPECIES_VULPIX_ALOLAN,
    SPECIES_DIGLETT_ALOLAN,
    SPECIES_MEOWTH_ALOLAN,
    SPECIES_GEODUDE_ALOLAN,
    SPECIES_GRIMER_ALOLAN,

    SPECIES_MEOWTH_GALARIAN,
    SPECIES_PONYTA_GALARIAN,
    SPECIES_SLOWPOKE_GALARIAN,
    SPECIES_FARFETCHD_GALARIAN,
    SPECIES_MR_MIME_GALARIAN,
    SPECIES_ARTICUNO_GALARIAN,
    SPECIES_ZAPDOS_GALARIAN,
    SPECIES_MOLTRES_GALARIAN,
#endif
};

static const u16 sQuerySpecies_Kate[] =
{
    SPECIES_VENUSAUR,
    SPECIES_ARBOK,
    SPECIES_NIDOKING,
    SPECIES_GENGAR,
    SPECIES_TENTACRUEL,
    SPECIES_MUK,
    SPECIES_VILEPLUME,
    SPECIES_NIDOQUEEN,
    SPECIES_GOLBAT,
    SPECIES_VICTREEBEL,
    SPECIES_WEEZING,
    SPECIES_CLEFABLE,
    SPECIES_BEEDRILL,

    SPECIES_CROBAT,
    SPECIES_HOUNDOOM,
    SPECIES_ARIADOS,
    SPECIES_HERACROSS,

    SPECIES_MIGHTYENA,
    SPECIES_SABLEYE,
    SPECIES_SWALOT,
    SPECIES_SEVIPER,
    SPECIES_BANETTE,
    SPECIES_ABSOL,
    SPECIES_SHARPEDO,
#ifdef ROGUE_EXPANSION
    SPECIES_FROSLASS,
    SPECIES_DUSKNOIR,
    SPECIES_DRIFBLIM,
    SPECIES_MISMAGIUS,
    SPECIES_HONCHKROW,
    SPECIES_SKUNTANK,
    SPECIES_TOXICROAK,
    SPECIES_WEAVILE,
    SPECIES_ROTOM,
    SPECIES_ROTOM_HEAT,
    SPECIES_ROTOM_WASH,
    SPECIES_ROTOM_FROST,
    SPECIES_ROTOM_FAN,
    SPECIES_ROTOM_MOW,
    SPECIES_GARCHOMP,

    SPECIES_SCOLIPEDE,
    SPECIES_KROOKODILE,
    SPECIES_SCRAFTY,
    SPECIES_COFAGRIGUS,
    SPECIES_GARBODOR,
    SPECIES_AMOONGUSS,
    SPECIES_JELLICENT,
    SPECIES_CHANDELURE,
    SPECIES_HAXORUS,
    SPECIES_BISHARP,
    SPECIES_GOLURK,
    SPECIES_HYDREIGON,

    SPECIES_PANGORO,
    SPECIES_MEOWSTIC,
    SPECIES_AEGISLASH,
    SPECIES_DRAGALGE,
    SPECIES_TYRANTRUM,
    SPECIES_GOURGEIST,
    SPECIES_NOIVERN,

    SPECIES_DECIDUEYE,
    SPECIES_RATICATE_ALOLAN,
    SPECIES_PERSIAN_ALOLAN,
    SPECIES_MUK_ALOLAN,
    SPECIES_SALAZZLE,
    SPECIES_MAROWAK_ALOLAN,
    SPECIES_TREVENANT,
    SPECIES_NINETALES_ALOLAN,
    SPECIES_DHELMISE,

    SPECIES_THIEVUL,
    SPECIES_OBSTAGOON,
    SPECIES_WEEZING_GALARIAN,
    SPECIES_MIMIKYU,
    SPECIES_TOXTRICITY,
    SPECIES_DRAGAPULT,
#endif
};

static const u16 sQuerySpecies_Erma[] =
{
    SPECIES_ARBOK,
    SPECIES_SANDSLASH,
    SPECIES_NINETALES,
    SPECIES_VENOMOTH,
    SPECIES_ARCANINE,
    SPECIES_VICTREEBEL,
    SPECIES_SLOWBRO,
    SPECIES_CLOYSTER,
    SPECIES_GENGAR,
    SPECIES_HYPNO,
    SPECIES_LAPRAS,
    SPECIES_FLAREON,
    SPECIES_KABUTOPS,
    SPECIES_ARTICUNO,
    SPECIES_DRAGONITE,

    SPECIES_MEGANIUM,
    SPECIES_ARIADOS,
    SPECIES_LANTURN,
    SPECIES_AMPHAROS,
    SPECIES_JUMPLUFF,
    SPECIES_QUAGSIRE,
    SPECIES_SCIZOR,
    SPECIES_TYRANITAR,
    SPECIES_LUGIA,

    SPECIES_DUSTOX,
    SPECIES_SHIFTRY,
    SPECIES_GARDEVOIR,
    SPECIES_MASQUERAIN,
    SPECIES_DELCATTY,
    SPECIES_AGGRON,
    SPECIES_FLYGON,
    SPECIES_LUNATONE,
    SPECIES_BANETTE,
    SPECIES_DUSCLOPS,
    SPECIES_SALAMENCE,
    SPECIES_METAGROSS,
    SPECIES_LATIAS,
    SPECIES_GROUDON,
    SPECIES_JIRACHI,

#ifdef ROGUE_EXPANSION
    SPECIES_SANDSLASH_ALOLAN,
    SPECIES_NINETALES_ALOLAN,
    SPECIES_RAPIDASH_GALARIAN,

    SPECIES_EMPOLEON,
    SPECIES_LUXRAY,
    SPECIES_ROSERADE,
    SPECIES_RAMPARDOS,
    SPECIES_VESPIQUEN,
    SPECIES_PACHIRISU,
    SPECIES_LOPUNNY,
    SPECIES_MISMAGIUS,
    SPECIES_SPIRITOMB,
    SPECIES_GARCHOMP,
    SPECIES_DRAPION,
    SPECIES_MAGNEZONE,
    SPECIES_TOGEKISS,
    SPECIES_GLACEON,
    SPECIES_GLISCOR,
    SPECIES_FROSLASS,
    SPECIES_DIALGA,
    SPECIES_HEATRAN,
    SPECIES_DARKRAI,

    SPECIES_ZEBSTRIKA,
    SPECIES_GIGALITH,
    SPECIES_EXCADRILL,
    SPECIES_LEAVANNY,
    SPECIES_SCOLIPEDE,
    SPECIES_WHIMSICOTT,
    SPECIES_LILLIGANT,
    SPECIES_CRUSTLE,
    SPECIES_ARCHEOPS,
    SPECIES_ZOROARK,
    SPECIES_EMOLGA,
    SPECIES_FERROTHORN,
    SPECIES_EELEKTROSS,
    SPECIES_CHANDELURE,
    SPECIES_MIENSHAO,
    SPECIES_BISHARP,
    SPECIES_HYDREIGON,
    SPECIES_VOLCARONA,
    SPECIES_RESHIRAM,
    SPECIES_MELOETTA,

    SPECIES_GOGOAT,
    SPECIES_MALAMAR,
    SPECIES_DRAGALGE,
    SPECIES_TYRANTRUM,
    SPECIES_AURORUS,
    SPECIES_CARBINK,
    SPECIES_TREVENANT,
    SPECIES_GOURGEIST,
    SPECIES_XERNEAS,
    SPECIES_DIANCIE,
    SPECIES_TOXAPEX,
    SPECIES_LURANTIS,
    SPECIES_TSAREENA,
    SPECIES_MIMIKYU,
    SPECIES_TAPU_LELE,
    SPECIES_TAPU_FINI,
    SPECIES_LUNALA,
    SPECIES_NIHILEGO,
    SPECIES_MAGEARNA,

    SPECIES_HATTERENE,
    SPECIES_ALCREMIE,
    SPECIES_FROSMOTH,
    SPECIES_DRACOVISH,
    SPECIES_DURALUDON,
    SPECIES_DRAGAPULT,
    SPECIES_REGIELEKI,
#endif
};

static const u16 sQuerySpecies_Tails[] =
{
    SPECIES_NINETALES,
    SPECIES_CLEFABLE,
    SPECIES_GYARADOS,
    SPECIES_STARMIE,
    SPECIES_GENGAR,
    SPECIES_MAGNETON,
    SPECIES_MACHAMP,
    SPECIES_VAPOREON,
    SPECIES_JOLTEON,
    SPECIES_FLAREON,
    SPECIES_LAPRAS,
    SPECIES_DRAGONITE,
    SPECIES_MEWTWO,
    SPECIES_MEW,

    SPECIES_CROBAT,
    SPECIES_LANTURN,
    SPECIES_AMPHAROS,
    SPECIES_AZUMARILL,
    SPECIES_SCIZOR,
    SPECIES_HERACROSS,
    SPECIES_ESPEON,
    SPECIES_UMBREON,
    SPECIES_SKARMORY,
    SPECIES_HOUNDOOM,
    SPECIES_KINGDRA,
    SPECIES_PORYGON2,
    SPECIES_TYRANITAR,
    SPECIES_LUGIA,
    SPECIES_HO_OH,

    SPECIES_GARDEVOIR,
    SPECIES_BRELOOM,
    SPECIES_SHEDINJA,
    SPECIES_AGGRON,
    SPECIES_SHARPEDO,
    SPECIES_FLYGON,
    SPECIES_MILOTIC,
    SPECIES_WALREIN,
    SPECIES_SALAMENCE,
    SPECIES_METAGROSS,
    SPECIES_KYOGRE,
    SPECIES_GROUDON,
    SPECIES_RAYQUAZA,

#ifdef ROGUE_EXPANSION
    SPECIES_RAICHU_ALOLAN,
    SPECIES_NINETALES_ALOLAN,
    SPECIES_MAGNEZONE,
    SPECIES_RAPIDASH_GALARIAN,

    SPECIES_PORYGON_Z,

    SPECIES_STARAPTOR,
    SPECIES_ROSERADE,
    SPECIES_SPIRITOMB,
    SPECIES_GARCHOMP,
    SPECIES_LUCARIO,
    SPECIES_DRAPION,
    SPECIES_WEAVILE,
    SPECIES_ELECTIVIRE,
    SPECIES_MAGMORTAR,
    SPECIES_TOGEKISS,
    SPECIES_YANMEGA,
    SPECIES_LEAFEON,
    SPECIES_GLACEON,
    SPECIES_GALLADE,
    SPECIES_FROSLASS,
    SPECIES_DUSKNOIR,
    SPECIES_ROTOM_WASH,
    SPECIES_ROTOM_FAN,
    SPECIES_DIALGA,
    SPECIES_PALKIA,
    SPECIES_GIRATINA,

    SPECIES_EXCADRILL,
    SPECIES_SCOLIPEDE,
    SPECIES_WHIMSICOTT,
    SPECIES_KROOKODILE,
    SPECIES_SCRAFTY,
    SPECIES_COFAGRIGUS,
    SPECIES_ZOROARK,
    SPECIES_EMOLGA,
    SPECIES_ESCAVALIER,
    SPECIES_CHANDELURE,
    SPECIES_EELEKTROSS,
    SPECIES_VOLCARONA,

    SPECIES_PANGORO,
    SPECIES_AEGISLASH,
    SPECIES_AROMATISSE,
    SPECIES_KLEFKI,
    SPECIES_TREVENANT,
    SPECIES_SYLVEON,
    SPECIES_XERNEAS,
    SPECIES_YVELTAL,
    
    SPECIES_TOXAPEX,
    SPECIES_BEWEAR,
    SPECIES_TOGEDEMARU,
    SPECIES_MIMIKYU,
    SPECIES_TAPU_KOKO,
    SPECIES_TAPU_LELE,
    SPECIES_TAPU_BULU,
    SPECIES_TAPU_FINI,

    SPECIES_CORVIKNIGHT,
    SPECIES_CENTISKORCH,
    SPECIES_GRIMMSNARL,
    SPECIES_DURALUDON,
#endif
};

static const u16 sQuerySpecies_Raven[] =
{
    SPECIES_NIDOKING,
    SPECIES_VILEPLUME,
    SPECIES_RAICHU,
    SPECIES_DRAGONITE,
    SPECIES_FLAREON,
    SPECIES_VAPOREON,
    SPECIES_ARTICUNO,
    SPECIES_RAPIDASH,

    SPECIES_FERALIGATR,
    SPECIES_AMPHAROS,
    SPECIES_MISDREAVUS,
    SPECIES_BELLOSSOM,
    SPECIES_HO_OH,

    SPECIES_BLAZIKEN,
    SPECIES_MAWILE,
    SPECIES_ALTARIA,
    SPECIES_BANETTE,
    SPECIES_JIRACHI,

#ifdef ROGUE_EXPANSION
    SPECIES_PACHIRISU,
    SPECIES_MISMAGIUS,
    SPECIES_HONCHKROW,
    SPECIES_VESPIQUEN,
    SPECIES_EMPOLEON,
    SPECIES_MANAPHY,

    SPECIES_WHIMSICOTT,
    SPECIES_SCOLIPEDE,
    SPECIES_KROOKODILE,
    SPECIES_VOLCARONA,
    SPECIES_BRAVIARY,
    SPECIES_CINCCINO,

    SPECIES_GOODRA,
    SPECIES_PANGORO,
    SPECIES_MEOWSTIC,
    SPECIES_CLAWITZER,
    SPECIES_GOURGEIST,
    SPECIES_DIANCIE,

    SPECIES_PRIMARINA,
    SPECIES_RAICHU_ALOLAN,
    SPECIES_BEWEAR,
    SPECIES_TAPU_LELE,

    SPECIES_DRACOZOLT,
    SPECIES_RAPIDASH_GALARIAN,
    SPECIES_ALCREMIE
#endif
};

static const struct RogueTrainerEncounter sRouteBossEncounters[] = 
{
    // Hoenn Gyms
    //
    {
        .gfxId = OBJ_EVENT_GFX_ROXANNE,
        .trainerId = TRAINER_ROGUE_BOSS_ROXANNE,
        .victorySetFlag = FLAG_BADGE01_GET,
        .incTypes = { TYPE_ROCK, TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_HOENN | TRAINER_FLAG_GYM,
    },
    {
        .gfxId = OBJ_EVENT_GFX_BRAWLY,
        .trainerId = TRAINER_ROGUE_BOSS_BRAWLY,
        .victorySetFlag = FLAG_BADGE02_GET,
        .incTypes = { TYPE_FIGHTING, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_HOENN | TRAINER_FLAG_GYM,
    },
    {
        .gfxId = OBJ_EVENT_GFX_WATTSON,
        .trainerId = TRAINER_ROGUE_BOSS_WATTSON,
        .victorySetFlag = FLAG_BADGE03_GET,
        .incTypes = { TYPE_ELECTRIC, TYPE_NONE, TYPE_ELECTRIC },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_HOENN | TRAINER_FLAG_GYM,
        .partyFlags = PARTY_FLAG_THIRDSLOT_ACE_TYPE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_FLANNERY,
        .trainerId = TRAINER_ROGUE_BOSS_FLANNERY,
        .victorySetFlag = FLAG_BADGE04_GET,
        .incTypes = { TYPE_FIRE, TYPE_NONE, TYPE_FIRE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_HOENN | TRAINER_FLAG_GYM,
        .partyFlags = PARTY_FLAG_THIRDSLOT_ACE_TYPE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_NORMAN,
        .trainerId = TRAINER_ROGUE_BOSS_NORMAN,
        .victorySetFlag = FLAG_BADGE05_GET,
        .incTypes = { TYPE_NORMAL, TYPE_NONE, TYPE_DRAGON },
        .excTypes = { TYPE_FLYING, TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_HOENN | TRAINER_FLAG_GYM,
        .partyFlags = PARTY_FLAG_THIRDSLOT_ACE_TYPE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_WINONA,
        .trainerId = TRAINER_ROGUE_BOSS_WINONA,
        .victorySetFlag = FLAG_BADGE06_GET,
        .incTypes = { TYPE_FLYING, TYPE_NONE, TYPE_FLYING  },
        .excTypes = { TYPE_NORMAL, TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_HOENN | TRAINER_FLAG_GYM,
        .partyFlags = PARTY_FLAG_THIRDSLOT_ACE_TYPE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_LIZA,
        .trainerId = TRAINER_ROGUE_BOSS_TATE_AND_LIZA,
        .victorySetFlag = FLAG_BADGE07_GET,
        .incTypes = { TYPE_PSYCHIC, TYPE_NONE, TYPE_PSYCHIC  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_HOENN | TRAINER_FLAG_GYM,
        .partyFlags = PARTY_FLAG_THIRDSLOT_ACE_TYPE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_JUAN,
        .trainerId = TRAINER_ROGUE_BOSS_JUAN,
        .victorySetFlag = FLAG_BADGE08_GET,
        .incTypes = { TYPE_WATER, TYPE_NONE, TYPE_WATER  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_HOENN | TRAINER_FLAG_GYM,
        .partyFlags = PARTY_FLAG_THIRDSLOT_ACE_TYPE,
    },

    // Hoenn Elite
    {
        .gfxId = OBJ_EVENT_GFX_SIDNEY,
        .trainerId = TRAINER_ROGUE_BOSS_SIDNEY,
        .incTypes = { TYPE_DARK, TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_HOENN | TRAINER_FLAG_ELITE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_PHOEBE,
        .trainerId = TRAINER_ROGUE_BOSS_PHOEBE,
        .incTypes = { TYPE_GHOST, TYPE_NONE, TYPE_PSYCHIC },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_HOENN | TRAINER_FLAG_ELITE,
        .partyFlags = PARTY_FLAG_THIRDSLOT_ACE_TYPE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_GLACIA,
        .trainerId = TRAINER_ROGUE_BOSS_GLACIA,
        .incTypes = { TYPE_ICE, TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_HOENN | TRAINER_FLAG_ELITE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_DRAKE,
        .trainerId = TRAINER_ROGUE_BOSS_DRAKE,
        .incTypes = { TYPE_DRAGON, TYPE_NONE, TYPE_DRAGON },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_HOENN | TRAINER_FLAG_ELITE,
    },

    // Hoenn Champs
    {
        .gfxId = OBJ_EVENT_GFX_WALLACE,
        .trainerId = TRAINER_ROGUE_BOSS_WALLACE,
        .incTypes = { TYPE_WATER, TYPE_NONE, TYPE_WATER },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_HOENN | TRAINER_FLAG_PRE_CHAMP,
        .partyFlags = PARTY_FLAG_THIRDSLOT_ACE_TYPE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_STEVEN,
        .trainerId = TRAINER_ROGUE_BOSS_STEVEN,
        .incTypes = { TYPE_STEEL, TYPE_NONE, TYPE_PSYCHIC },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_HOENN | TRAINER_FLAG_FINAL_CHAMP,
        .partyFlags = PARTY_FLAG_THIRDSLOT_ACE_TYPE,
    },

    // Kanto Gyms
    //
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_BROCK,
        .trainerId = TRAINER_ROGUE_BOSS_BROCK,
        .victorySetFlag = FLAG_BADGE01_GET,
        .incTypes = { TYPE_ROCK, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_KANTO | TRAINER_FLAG_GYM,
        .querySpecies = sQuerySpecies_Kanto,
        .querySpeciesCount = ARRAY_COUNT(sQuerySpecies_Kanto),
        .partyFlags = PARTY_FLAG_CUSTOM_INPUT_QUERY | PARTY_FLAG_REGION_DEX_DISABLE_QUERY,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_MISTY,
        .trainerId = TRAINER_ROGUE_BOSS_MISTY,
        .victorySetFlag = FLAG_BADGE02_GET,
        .incTypes = { TYPE_WATER, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_KANTO | TRAINER_FLAG_GYM,
        .querySpecies = sQuerySpecies_Kanto,
        .querySpeciesCount = ARRAY_COUNT(sQuerySpecies_Kanto),
        .partyFlags = PARTY_FLAG_CUSTOM_INPUT_QUERY | PARTY_FLAG_REGION_DEX_DISABLE_QUERY,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_LTSURGE,
        .trainerId = TRAINER_ROGUE_BOSS_LTSURGE,
        .victorySetFlag = FLAG_BADGE03_GET,
        .incTypes = { TYPE_ELECTRIC, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_KANTO | TRAINER_FLAG_GYM,
        .querySpecies = sQuerySpecies_Kanto,
        .querySpeciesCount = ARRAY_COUNT(sQuerySpecies_Kanto),
        .partyFlags = PARTY_FLAG_CUSTOM_INPUT_QUERY | PARTY_FLAG_REGION_DEX_DISABLE_QUERY,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_ERIKA,
        .trainerId = TRAINER_ROGUE_BOSS_ERIKA,
        .victorySetFlag = FLAG_BADGE04_GET,
        .incTypes = { TYPE_GRASS, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_KANTO | TRAINER_FLAG_GYM,
        .querySpecies = sQuerySpecies_Kanto,
        .querySpeciesCount = ARRAY_COUNT(sQuerySpecies_Kanto),
        .partyFlags = PARTY_FLAG_CUSTOM_INPUT_QUERY | PARTY_FLAG_REGION_DEX_DISABLE_QUERY,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_KOGA,
        .trainerId = TRAINER_ROGUE_BOSS_KOGA,
        .victorySetFlag = FLAG_BADGE05_GET,
        .incTypes = { TYPE_POISON, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_KANTO | TRAINER_FLAG_GYM,
        .querySpecies = sQuerySpecies_Kanto,
        .querySpeciesCount = ARRAY_COUNT(sQuerySpecies_Kanto),
        .partyFlags = PARTY_FLAG_CUSTOM_INPUT_QUERY | PARTY_FLAG_REGION_DEX_DISABLE_QUERY,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_SABRINA,
        .trainerId = TRAINER_ROGUE_BOSS_SABRINA,
        .victorySetFlag = FLAG_BADGE06_GET,
        .incTypes = { TYPE_PSYCHIC, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_KANTO | TRAINER_FLAG_GYM,
        .querySpecies = sQuerySpecies_Kanto,
        .querySpeciesCount = ARRAY_COUNT(sQuerySpecies_Kanto),
        .partyFlags = PARTY_FLAG_CUSTOM_INPUT_QUERY | PARTY_FLAG_REGION_DEX_DISABLE_QUERY,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_BLAINE,
        .trainerId = TRAINER_ROGUE_BOSS_BLAINE,
        .victorySetFlag = FLAG_BADGE07_GET,
        .incTypes = { TYPE_FIRE, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_KANTO | TRAINER_FLAG_GYM,
        .querySpecies = sQuerySpecies_Kanto,
        .querySpeciesCount = ARRAY_COUNT(sQuerySpecies_Kanto),
        .partyFlags = PARTY_FLAG_CUSTOM_INPUT_QUERY | PARTY_FLAG_REGION_DEX_DISABLE_QUERY,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_GIOVANNI,
        .trainerId = TRAINER_ROGUE_BOSS_GIOVANNI,
        .victorySetFlag = FLAG_BADGE08_GET,
        .incTypes = { TYPE_GROUND, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_KANTO | TRAINER_FLAG_GYM,
        .querySpecies = sQuerySpecies_Kanto,
        .querySpeciesCount = ARRAY_COUNT(sQuerySpecies_Kanto),
        .partyFlags = PARTY_FLAG_CUSTOM_INPUT_QUERY | PARTY_FLAG_REGION_DEX_DISABLE_QUERY,
    },

    // Kanto Elite 4
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_LORELEI,
        .trainerId = TRAINER_ROGUE_BOSS_LORELEI,
        .incTypes = { TYPE_ICE, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_KANTO | TRAINER_FLAG_ELITE,
        .querySpecies = sQuerySpecies_Kanto,
        .querySpeciesCount = ARRAY_COUNT(sQuerySpecies_Kanto),
        .partyFlags = PARTY_FLAG_CUSTOM_INPUT_QUERY | PARTY_FLAG_REGION_DEX_DISABLE_QUERY,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_BRUNO,
        .trainerId = TRAINER_ROGUE_BOSS_BRUNO,
        .incTypes = { TYPE_FIGHTING, TYPE_GROUND, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_KANTO | TRAINER_FLAG_ELITE,
        .querySpecies = sQuerySpecies_Kanto,
        .querySpeciesCount = ARRAY_COUNT(sQuerySpecies_Kanto),
        .partyFlags = PARTY_FLAG_CUSTOM_INPUT_QUERY | PARTY_FLAG_REGION_DEX_DISABLE_QUERY,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_AGATHA,
        .trainerId = TRAINER_ROGUE_BOSS_AGATHA,
        .incTypes = { TYPE_GHOST, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_KANTO | TRAINER_FLAG_ELITE,
        .querySpecies = sQuerySpecies_Kanto,
        .querySpeciesCount = ARRAY_COUNT(sQuerySpecies_Kanto),
        .partyFlags = PARTY_FLAG_CUSTOM_INPUT_QUERY | PARTY_FLAG_REGION_DEX_DISABLE_QUERY,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_LANCE,
        .trainerId = TRAINER_ROGUE_BOSS_LANCE,
        .incTypes = { TYPE_DRAGON, TYPE_NONE, TYPE_FLYING },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_KANTO | TRAINER_FLAG_ELITE | TRAINER_FLAG_DISABLE_WEATHER,
        .querySpecies = sQuerySpecies_Kanto,
        .querySpeciesCount = ARRAY_COUNT(sQuerySpecies_Kanto),
        .partyFlags = PARTY_FLAG_CUSTOM_INPUT_QUERY | PARTY_FLAG_REGION_DEX_DISABLE_QUERY | PARTY_FLAG_THIRDSLOT_FALLBACK_TYPE,
    },

    // Kanto Champs
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_BLUE,
        .trainerId = TRAINER_ROGUE_BOSS_BLUE,
        .incTypes = { TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_KANTO | TRAINER_FLAG_PRE_CHAMP,
        .querySpecies = sQuerySpecies_Blue,
        .querySpeciesCount = ARRAY_COUNT(sQuerySpecies_Blue),
        .partyFlags = PARTY_FLAG_CUSTOM_INPUT_QUERY | PARTY_FLAG_REGION_DEX_DISABLE_QUERY | PARTY_FLAG_STRONG_PRESETS_IGNORE | PARTY_FLAG_UNIQUE_COVERAGE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_PROFOAK,
        .trainerId = TRAINER_ROGUE_BOSS_PROFOAK,
        .incTypes = { TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_KANTO | TRAINER_FLAG_FINAL_CHAMP,
        .querySpecies = sQuerySpecies_ProfOak,
        .querySpeciesCount = ARRAY_COUNT(sQuerySpecies_ProfOak),
        .partyFlags = PARTY_FLAG_CUSTOM_INPUT_QUERY | PARTY_FLAG_REGION_DEX_DISABLE_QUERY | PARTY_FLAG_UNIQUE_COVERAGE,
    },

    // Johto gyms
    //
    {
        .gfxId = OBJ_EVENT_GFX_JOHTO_FALKNER,
        .trainerId = TRAINER_ROGUE_BOSS_FALKNER,
        .victorySetFlag = FLAG_BADGE01_GET,
        .incTypes = { TYPE_FLYING, TYPE_NONE, TYPE_FLYING  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_JOHTO | TRAINER_FLAG_GYM,
        .partyFlags = PARTY_FLAG_THIRDSLOT_ACE_TYPE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_JOHTO_BUGSY,
        .trainerId = TRAINER_ROGUE_BOSS_BUGSY,
        .victorySetFlag = FLAG_BADGE02_GET,
        .incTypes = { TYPE_BUG, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_JOHTO | TRAINER_FLAG_GYM,
    },
    {
        .gfxId = OBJ_EVENT_GFX_JOHTO_WHITNEY,
        .trainerId = TRAINER_ROGUE_BOSS_WHITNEY,
        .victorySetFlag = FLAG_BADGE03_GET,
        .incTypes = { TYPE_NORMAL, TYPE_NONE  },
        .excTypes = { TYPE_FLYING, TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_JOHTO | TRAINER_FLAG_GYM,
    },
    {
        .gfxId = OBJ_EVENT_GFX_JOHTO_MORTY,
        .trainerId = TRAINER_ROGUE_BOSS_MORTY,
        .victorySetFlag = FLAG_BADGE04_GET,
        .incTypes = { TYPE_GHOST, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_JOHTO | TRAINER_FLAG_GYM,
    },
    {
        .gfxId = OBJ_EVENT_GFX_JOHTO_CHUCK,
        .trainerId = TRAINER_ROGUE_BOSS_CHUCK,
        .victorySetFlag = FLAG_BADGE05_GET,
        .incTypes = { TYPE_FIGHTING, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_JOHTO | TRAINER_FLAG_GYM,
    },
    {
        .gfxId = OBJ_EVENT_GFX_JOHTO_JASMINE,
        .trainerId = TRAINER_ROGUE_BOSS_JASMINE,
        .victorySetFlag = FLAG_BADGE06_GET,
        .incTypes = { TYPE_STEEL, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_JOHTO | TRAINER_FLAG_GYM,
    },
    {
        .gfxId = OBJ_EVENT_GFX_JOHTO_PRYCE,
        .trainerId = TRAINER_ROGUE_BOSS_PRYCE,
        .victorySetFlag = FLAG_BADGE07_GET,
        .incTypes = { TYPE_ICE, TYPE_NONE, TYPE_ICE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_JOHTO | TRAINER_FLAG_GYM,
        .partyFlags = PARTY_FLAG_THIRDSLOT_ACE_TYPE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_JOHTO_CLAIR,
        .trainerId = TRAINER_ROGUE_BOSS_CLAIR,
        .victorySetFlag = FLAG_BADGE08_GET,
        .incTypes = { TYPE_DRAGON, TYPE_NONE, TYPE_WATER },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_JOHTO | TRAINER_FLAG_GYM | TRAINER_FLAG_THIRDSLOT_WEATHER,
        .partyFlags = PARTY_FLAG_THIRDSLOT_ACE_TYPE | PARTY_FLAG_THIRDSLOT_FALLBACK_TYPE,
    },

    // Johto Elite 4
    {
        .gfxId = OBJ_EVENT_GFX_JOHTO_WILL,
        .trainerId = TRAINER_ROGUE_BOSS_WILL,
        .incTypes = { TYPE_PSYCHIC, TYPE_NONE, TYPE_PSYCHIC },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_JOHTO | TRAINER_FLAG_ELITE,
        .partyFlags = PARTY_FLAG_THIRDSLOT_ACE_TYPE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_KOGA,
        .trainerId = TRAINER_ROGUE_BOSS_JOHTO_KOGA,
        .incTypes = { TYPE_POISON, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_JOHTO | TRAINER_FLAG_ELITE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_BRUNO,
        .trainerId = TRAINER_ROGUE_BOSS_JOHTO_BRUNO,
        .incTypes = { TYPE_FIGHTING, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_JOHTO | TRAINER_FLAG_ELITE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_JOHTO_KAREN,
        .trainerId = TRAINER_ROGUE_BOSS_KAREN,
        .incTypes = { TYPE_DARK, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_JOHTO | TRAINER_FLAG_ELITE,
    },

    // Johto Champs
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_LANCE,
        .trainerId = TRAINER_ROGUE_BOSS_JOHTO_LANCE,
        .incTypes = { TYPE_DRAGON, TYPE_NONE, TYPE_FLYING },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_JOHTO | TRAINER_FLAG_PRE_CHAMP | TRAINER_FLAG_DISABLE_WEATHER,
        .partyFlags = PARTY_FLAG_THIRDSLOT_ACE_TYPE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_JOHTO_RED,
        .trainerId = TRAINER_ROGUE_BOSS_RED,
        .incTypes = { TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_JOHTO | TRAINER_FLAG_FINAL_CHAMP | TRAINER_FLAG_RAINBOW_CHAMP,
        .partyFlags = PARTY_FLAG_UNIQUE_COVERAGE,
    },
    

    // Placeholder Rainbow mode bosses for missing types
#ifdef ROGUE_EXPANSION
    {
        .gfxId = OBJ_EVENT_GFX_ANABEL,
        .trainerId = TRAINER_ROGUE_BOSS_ANABEL,
        .incTypes = { TYPE_FAIRY, TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_NONE,
    },
#endif
    // Kanto Rainbow Version
    //
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_BROCK,
        .trainerId = TRAINER_ROGUE_BOSS_BROCK,
        .victorySetFlag = FLAG_BADGE01_GET,
        .incTypes = { TYPE_ROCK, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_GYM,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_MISTY,
        .trainerId = TRAINER_ROGUE_BOSS_MISTY,
        .victorySetFlag = FLAG_BADGE02_GET,
        .incTypes = { TYPE_WATER, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_GYM,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_LTSURGE,
        .trainerId = TRAINER_ROGUE_BOSS_LTSURGE,
        .victorySetFlag = FLAG_BADGE03_GET,
        .incTypes = { TYPE_ELECTRIC, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_GYM,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_ERIKA,
        .trainerId = TRAINER_ROGUE_BOSS_ERIKA,
        .victorySetFlag = FLAG_BADGE04_GET,
        .incTypes = { TYPE_GRASS, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_GYM,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_KOGA,
        .trainerId = TRAINER_ROGUE_BOSS_KOGA,
        .victorySetFlag = FLAG_BADGE05_GET,
        .incTypes = { TYPE_POISON, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_GYM,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_SABRINA,
        .trainerId = TRAINER_ROGUE_BOSS_SABRINA,
        .victorySetFlag = FLAG_BADGE06_GET,
        .incTypes = { TYPE_PSYCHIC, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_GYM,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_BLAINE,
        .trainerId = TRAINER_ROGUE_BOSS_BLAINE,
        .victorySetFlag = FLAG_BADGE07_GET,
        .incTypes = { TYPE_FIRE, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_GYM,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_GIOVANNI,
        .trainerId = TRAINER_ROGUE_BOSS_GIOVANNI,
        .victorySetFlag = FLAG_BADGE08_GET,
        .incTypes = { TYPE_GROUND, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_GYM,
    },

    // Kanto Elite 4
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_LORELEI,
        .trainerId = TRAINER_ROGUE_BOSS_LORELEI,
        .incTypes = { TYPE_ICE, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_ELITE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_BRUNO,
        .trainerId = TRAINER_ROGUE_BOSS_BRUNO,
        .incTypes = { TYPE_FIGHTING, TYPE_GROUND, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_ELITE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_AGATHA,
        .trainerId = TRAINER_ROGUE_BOSS_AGATHA,
        .incTypes = { TYPE_GHOST, TYPE_NONE  },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_ELITE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_LANCE,
        .trainerId = TRAINER_ROGUE_BOSS_LANCE,
        .incTypes = { TYPE_DRAGON, TYPE_NONE, TYPE_FLYING },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_ELITE | TRAINER_FLAG_DISABLE_WEATHER,
        .partyFlags = PARTY_FLAG_THIRDSLOT_FALLBACK_TYPE,
    },

    // Fallback set
    //
    // gyms
    {
        .gfxId = OBJ_EVENT_GFX_PHOEBE,
        .trainerId = TRAINER_ROGUE_BOSS_PHOEBE,
        .victorySetFlag = FLAG_BADGE01_GET,
        .incTypes = { TYPE_GROUND, TYPE_ELECTRIC, TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_FALLBACK_REGION | TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_GYM,
    },
    {
        .gfxId = OBJ_EVENT_GFX_JOHTO_BUGSY,
        .trainerId = TRAINER_ROGUE_BOSS_BUGSY,
        .victorySetFlag = FLAG_BADGE02_GET,
#ifdef ROGUE_EXPANSION
        .incTypes = { TYPE_DRAGON, TYPE_FAIRY, TYPE_NONE },
#else
        .incTypes = { TYPE_DRAGON, TYPE_DARK, TYPE_NONE },
#endif
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_FALLBACK_REGION | TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_GYM,
    },
    {
        .gfxId = OBJ_EVENT_GFX_WALLACE,
        .trainerId = TRAINER_ROGUE_BOSS_WALLACE,
        .victorySetFlag = FLAG_BADGE03_GET,
        .incTypes = { TYPE_GRASS, TYPE_WATER, TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_FALLBACK_REGION | TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_GYM,
    },
    {
        .gfxId = OBJ_EVENT_GFX_ANABEL,
        .trainerId = TRAINER_ROGUE_BOSS_ANABEL,
        .victorySetFlag = FLAG_BADGE04_GET,
        .incTypes = { TYPE_PSYCHIC, TYPE_FIGHTING, TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_FALLBACK_REGION | TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_GYM,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_SABRINA,
        .trainerId = TRAINER_ROGUE_BOSS_SABRINA,
        .victorySetFlag = FLAG_BADGE05_GET,
        .incTypes = { TYPE_FLYING, TYPE_BUG, TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_FALLBACK_REGION | TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_GYM,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_BLAINE,
        .trainerId = TRAINER_ROGUE_BOSS_BLAINE,
        .victorySetFlag = FLAG_BADGE06_GET,
        .incTypes = { TYPE_NORMAL, TYPE_GHOST, TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_FALLBACK_REGION | TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_GYM,
    },
    {
        .gfxId = OBJ_EVENT_GFX_LIZA,
        .trainerId = TRAINER_ROGUE_BOSS_TATE_AND_LIZA,
        .victorySetFlag = FLAG_BADGE07_GET,
        .incTypes = { TYPE_ICE, TYPE_STEEL, TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_FALLBACK_REGION | TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_GYM,
    },
    {
        .gfxId = OBJ_EVENT_GFX_KANTO_AGATHA,
        .trainerId = TRAINER_ROGUE_BOSS_AGATHA,
        .victorySetFlag = FLAG_BADGE08_GET,
        .incTypes = { TYPE_FIRE, TYPE_WATER, TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_FALLBACK_REGION | TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_GYM,
    },

    // Elite 4
    {
        .gfxId = OBJ_EVENT_GFX_GLITCH_KATE,
        .trainerId = TRAINER_ROGUE_BOSS_KATE,
        .incTypes = { TYPE_NONE, TYPE_NONE, TYPE_POISON },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_FALLBACK_REGION | TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_ELITE | TRAINER_FLAG_THIRDSLOT_WEATHER,
        .querySpecies = sQuerySpecies_Kate,
        .querySpeciesCount = ARRAY_COUNT(sQuerySpecies_Kate),
        .partyFlags = PARTY_FLAG_CUSTOM_FINAL_QUERY | PARTY_FLAG_STRONG_PRESETS_IGNORE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_SCIENTIST_2,
        .trainerId = TRAINER_ROGUE_BOSS_TAILS,
#ifdef ROGUE_EXPANSION
        .incTypes = { TYPE_NONE, TYPE_NONE, TYPE_FAIRY },
#else
        .incTypes = { TYPE_NONE, TYPE_NONE, TYPE_PSYCHIC }, // Give fog but don't do anything with it
#endif
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_FALLBACK_REGION | TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_ELITE | TRAINER_FLAG_THIRDSLOT_WEATHER,
        .querySpecies = sQuerySpecies_Tails,
        .querySpeciesCount = ARRAY_COUNT(sQuerySpecies_Tails),
        .partyFlags = PARTY_FLAG_CUSTOM_FINAL_QUERY | PARTY_FLAG_STRONG_PRESETS_IGNORE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_WOMAN_2,
        .trainerId = TRAINER_ROGUE_BOSS_RAVEN,
#ifdef ROGUE_EXPANSION
        .incTypes = { TYPE_NONE, TYPE_NONE, TYPE_FAIRY },
#else
        .incTypes = { TYPE_NONE, TYPE_NONE, TYPE_PSYCHIC }, // Give fog but don't do anything with it
#endif
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_FALLBACK_REGION | TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_ELITE | TRAINER_FLAG_THIRDSLOT_WEATHER,
        .querySpecies = sQuerySpecies_Raven,
        .querySpeciesCount = ARRAY_COUNT(sQuerySpecies_Raven),
        .partyFlags = PARTY_FLAG_CUSTOM_FINAL_QUERY | PARTY_FLAG_STRONG_PRESETS_IGNORE,
    },
    {
        .gfxId = OBJ_EVENT_GFX_GLITCH_ERMA,
        .trainerId = TRAINER_ROGUE_BOSS_ERMA,
        .incTypes = { TYPE_NONE, TYPE_NONE, TYPE_ROCK },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_FALLBACK_REGION | TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_ELITE | TRAINER_FLAG_THIRDSLOT_WEATHER,
        .querySpecies = sQuerySpecies_Erma,
        .querySpeciesCount = ARRAY_COUNT(sQuerySpecies_Erma),
        .partyFlags = PARTY_FLAG_CUSTOM_FINAL_QUERY | PARTY_FLAG_STRONG_PRESETS_IGNORE,
    },

    // Champions
    {
        .gfxId = OBJ_EVENT_GFX_BRENDAN_ALT,
        .trainerId = TRAINER_ROGUE_BOSS_MIRROR,
        .incTypes = { TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_FALLBACK_REGION | TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_PRE_CHAMP,
        .partyFlags = PARTY_FLAG_MIRROR_SPECIES,
    },
    {
        .gfxId = OBJ_EVENT_GFX_GIRL_2,
        .trainerId = TRAINER_ROGUE_BOSS_POKABBIE,
        .incTypes = { TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_FALLBACK_REGION | TRAINER_FLAG_RAINBOW_EXCLUDE | TRAINER_FLAG_FINAL_CHAMP,
        .partyFlags = PARTY_FLAG_COUNTER_TYPINGS,
    },
};

const struct RogueTrainerData gRogueBossEncounters = 
{
    .count = ARRAY_COUNT(sRouteBossEncounters),
    .trainers = sRouteBossEncounters
};

#define TRAINER_FLAG_MINI_BOSS (TRAINER_FLAG_HOENN | TRAINER_FLAG_KANTO | TRAINER_FLAG_JOHTO)

static const struct RogueTrainerEncounter sRouteMiniBossEncounters[] = 
{
    {
        .gfxId = OBJ_EVENT_GFX_MAXIE,
        .trainerId = TRAINER_ROGUE_MINI_BOSS_MAXIE,
        .incTypes = { TYPE_FIRE, TYPE_DARK, TYPE_NONE },
        .excTypes = { TYPE_WATER, TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_MINI_BOSS,
    },
    {
        .gfxId = OBJ_EVENT_GFX_ARCHIE,
        .trainerId = TRAINER_ROGUE_MINI_BOSS_ARCHIE,
        .incTypes = { TYPE_WATER, TYPE_DARK, TYPE_NONE },
        .excTypes = { TYPE_FIRE, TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_MINI_BOSS,
    },
    {
        .gfxId = OBJ_EVENT_GFX_WALLY,
        .trainerId = TRAINER_ROGUE_MINI_BOSS_WALLY,
        .incTypes = { TYPE_PSYCHIC, TYPE_NORMAL, TYPE_NONE },
        .excTypes = { TYPE_FLYING, TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_MINI_BOSS,
    },
    {
        .gfxId = OBJ_EVENT_GFX_BRENDAN_ALT,
        .trainerId = TRAINER_ROGUE_MINI_BOSS_MIRROR,
        .incTypes = { TYPE_MYSTERY, TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_MINI_BOSS,
        .partyFlags = PARTY_FLAG_MIRROR_EXACT,
    },
    {
        .gfxId = OBJ_EVENT_GFX_MAY_ALT,
        .trainerId = TRAINER_ROGUE_MINI_BOSS_RIVAL,
        .incTypes = { TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_MINI_BOSS,
        .partyFlags = PARTY_FLAG_COUNTER_TYPINGS,
    },

    {
        .gfxId = OBJ_EVENT_GFX_LUCY,
        .trainerId = TRAINER_ROGUE_MINI_BOSS_LUCY,
        .incTypes = { TYPE_POISON, TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_MINI_BOSS,
    },
    {
        .gfxId = OBJ_EVENT_GFX_BRANDON,
        .trainerId = TRAINER_ROGUE_MINI_BOSS_BRANDON,
        .incTypes = { TYPE_GROUND, TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_MINI_BOSS,
    },
    {
        .gfxId = OBJ_EVENT_GFX_TUCKER,
        .trainerId = TRAINER_ROGUE_MINI_BOSS_TUCKER,
        .incTypes = { TYPE_BUG, TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_MINI_BOSS,
    },
    {
        .gfxId = OBJ_EVENT_GFX_SPENSER,
        .trainerId = TRAINER_ROGUE_MINI_BOSS_SPENSER,
        .incTypes = { TYPE_GRASS, TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_MINI_BOSS,
    },
    {
        .gfxId = OBJ_EVENT_GFX_GRETA,
        .trainerId = TRAINER_ROGUE_MINI_BOSS_GRETA,
        .incTypes = { TYPE_FIGHTING, TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_MINI_BOSS,
    },
    {
        .gfxId = OBJ_EVENT_GFX_NOLAND,
        .trainerId = TRAINER_ROGUE_MINI_BOSS_NOLAND,
        .incTypes = { TYPE_ICE, TYPE_DRAGON, TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_MINI_BOSS,
    },
#ifdef ROGUE_EXPANSION
    {
        .gfxId = OBJ_EVENT_GFX_ANABEL,
        .trainerId = TRAINER_ROGUE_MINI_BOSS_ANABEL,
        .incTypes = { TYPE_FAIRY, TYPE_NONE },
        .excTypes = { TYPE_NONE },
        .trainerFlags = TRAINER_FLAG_MINI_BOSS,
    },
#endif
};

const struct RogueTrainerData gRogueMiniBossEncounters = 
{
    .count = ARRAY_COUNT(sRouteMiniBossEncounters),
    .trainers = sRouteMiniBossEncounters
};

#undef ENCOUNTER_MAP