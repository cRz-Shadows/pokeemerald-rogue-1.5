const NPC_BOX_LEFT = 3
const NPC_BOX_RIGHT = 1
const NPC_HOST = 2

const VAR_GAMESHOW_STAGE = VAR_TEMP_1
const VAR_GOOD_BOX = VAR_TEMP_2

mapscripts Rogue_Encounter_GameShow_MapScripts 
{

}

script Rogue_Encounter_GameShow_TriggerIntro
{
    lockall

    msgbox(format("WAHEY!"), MSGBOX_DEFAULT)
    applymovement(NPC_HOST, GameShow_Host_Spin)
    waitmovement(0)

    msgbox(format("Welcome to my ever so lovingly setup GAME SHOW!\pThis game is simple!\nYou'll get 2 choices...\pOne might be good...\nOne might be bad...!\pNow!\nOn to Round 1!"), MSGBOX_DEFAULT)

    call(Rogue_Encounter_GameShow_DropBoxes)


    releaseall
    setvar(VAR_TEMP_0, 1)
    setvar(VAR_GAMESHOW_STAGE, 1)
}

script Rogue_Encounter_GameShow_RestoreBoxes
{
    waitse
    playse(SE_BALL_BOUNCE_1)

    hideobjectat(NPC_BOX_LEFT, MAP_ROGUE_ENCOUNTER_GAME_SHOW)
    hideobjectat(NPC_BOX_RIGHT, MAP_ROGUE_ENCOUNTER_GAME_SHOW)

    setobjectxy(NPC_BOX_LEFT, 5, 2)
    setobjectxy(NPC_BOX_RIGHT, 9, 2)

    showobjectat(NPC_BOX_LEFT, MAP_ROGUE_ENCOUNTER_GAME_SHOW)
    showobjectat(NPC_BOX_RIGHT, MAP_ROGUE_ENCOUNTER_GAME_SHOW)
}

script Rogue_Encounter_GameShow_DropBoxes
{
    random(2)
    copyvar(VAR_GOOD_BOX, VAR_RESULT)

    waitse
    playse(SE_FALL)
    waitse

    applymovement(NPC_BOX_LEFT, GameShow_BoxFall)
    applymovement(NPC_BOX_RIGHT, GameShow_BoxFall)
    waitmovement(0)

    waitse
    playse(SE_BRIDGE_WALK)
}

script Rogue_Encounter_GameShow_NextRound
{
    if(var(VAR_GAMESHOW_STAGE) >= 4)
    {
        call(Rogue_Encounter_GameShow_Finish)
    }
    else
    {
        addvar(VAR_GAMESHOW_STAGE, 1)
        buffernumberstring(STR_VAR_1, VAR_GAMESHOW_STAGE)

        call(Rogue_Encounter_GameShow_RestoreBoxes)

        applymovement(NPC_HOST, GameShow_Host_Spin)
        waitmovement(0)

        msgbox(format("On to Round {STR_VAR_1}!"), MSGBOX_DEFAULT)
        call(Rogue_Encounter_GameShow_DropBoxes)
    }
}

script Rogue_Encounter_GameShow_Finish
{
    call(Rogue_Encounter_GameShow_RestoreBoxes)

    applymovement(NPC_HOST, GameShow_Host_Spin)
    waitmovement(0)

    msgbox(format("That's all for now folks!\nKe ke ke"), MSGBOX_DEFAULT)

    applymovement(NPC_HOST, GameShow_Host_Exit)
    waitmovement(0)

    setobjectxyperm(NPC_HOST, 7, 0)
}

script Rogue_Encounter_GameShow_DisplayGood
{
    playse(SE_DING_DONG)
    waitse

    msgbox(format("Well chosen!"), MSGBOX_DEFAULT)
    
    random(6)

    switch(var(VAR_RESULT))
    {
        case 0:
            addmoney(10000)
            msgbox(format("You just got an extra ¥10000!"), MSGBOX_DEFAULT)

        case 1:
            specialvar(VAR_RESULT, CalculatePlayerPartyCount)
            random(VAR_RESULT)
            copyvar(VAR_0x8004, VAR_RESULT)
            special(BufferMonNickname)

            setvar(VAR_0x8005, 0)
            special(Rogue_AlterMonIVs)
            msgbox(format("{STR_VAR_1} just got a bit stronger!"), MSGBOX_DEFAULT)

        case 2:
            setvar(VAR_0x8004, 255)
            setvar(VAR_0x8005, 0)
            special(Rogue_AlterMonIVs)
            msgbox(format("All of your POKéMON all just got a bit stronger!"), MSGBOX_DEFAULT)

        case 3:
            random(10)
            msgbox(format("You will recieve a special item!"), MSGBOX_DEFAULT)

            switch(var(VAR_RESULT))
            {
                case 0:
                    giveitem(ITEM_MAX_POTION, 3)

                case 1:
                    giveitem(ITEM_FULL_RESTORE, 3)

                case 2:
                    giveitem(ITEM_MASTER_BALL, 1)

                case 3:
                    giveitem(ITEM_TM26_EARTHQUAKE, 1)

                case 4:
                    giveitem(ITEM_TM15_HYPER_BEAM, 1)

                case 5:
                    giveitem(ITEM_TM14_BLIZZARD, 1)

                case 6:
                    giveitem(ITEM_TM38_FIRE_BLAST, 1)

                case 7:
                    giveitem(ITEM_TM25_THUNDER, 1)

                case 8:
                    giveitem(ITEM_PREMIER_BALL, 50)

                case 9:
                    giveitem(ITEM_ULTRA_BALL, 20)
            }

        case 4:
            special(HealPlayerParty)
            msgbox(format("All of your POKéMON all just got all healed up!"), MSGBOX_DEFAULT)
            
        case 5:
            addmoney(5000)
            msgbox(format("You just got an extra ¥5000!"), MSGBOX_DEFAULT)
    }
    

    call(Rogue_Encounter_GameShow_NextRound)
}

script Rogue_Encounter_GameShow_DisplayBad
{
    //playse(SE_FAINT)
    //playse(SE_CLICK)
    playse(SE_BOO)
    waitse
    msgbox(format("Oh no..."), MSGBOX_DEFAULT)

    random(9)

    switch(var(VAR_RESULT))
    {
        case 0:
            removemoney(10000)
            msgbox(format("You just lost ¥10000."), MSGBOX_DEFAULT)

        case 1:
            specialvar(VAR_RESULT, CalculatePlayerPartyCount)
            random(VAR_RESULT)
            copyvar(VAR_0x8004, VAR_RESULT)
            special(BufferMonNickname)

            setvar(VAR_0x8005, 1)
            special(Rogue_AlterMonIVs)
            msgbox(format("{STR_VAR_1} just got a bit weaker."), MSGBOX_DEFAULT)

        case 2:
            setvar(VAR_0x8004, 255)
            setvar(VAR_0x8005, 1)
            special(Rogue_AlterMonIVs)
            msgbox(format("All of your POKéMON all just got a bit weaker."), MSGBOX_DEFAULT)
            
        case 3:
            specialvar(VAR_RESULT, CalculatePlayerPartyCount)
            random(VAR_RESULT)
            copyvar(VAR_0x8004, VAR_RESULT)
            special(BufferMonNickname)
            
            fadescreen(FADE_TO_BLACK)
            playfanfare(MUS_MOVE_DELETED)
            special(Rogue_RandomisePartyMon)
            waitfanfare
            fadescreen(FADE_FROM_BLACK)

            msgbox(format("Oh no!\n{STR_VAR_1} was traded away."), MSGBOX_DEFAULT)

        case 4:
            specialvar(VAR_RESULT, CalculatePlayerPartyCount)
            random(VAR_RESULT)
            copyvar(VAR_0x8004, VAR_RESULT)
            special(BufferMonNickname)

            random(5)
            copyvar(VAR_0x8005, VAR_RESULT)

            special(Rogue_ApplyStatusToMon)

            switch(var(VAR_0x8005))
            {
                case 0:
                    msgbox(format("{STR_VAR_1} is now poisoned."), MSGBOX_DEFAULT)

                case 1:
                    msgbox(format("{STR_VAR_1} is now paralyzed."), MSGBOX_DEFAULT)

                case 2:
                    msgbox(format("{STR_VAR_1} is now sleeping."), MSGBOX_DEFAULT)

                case 3:
                    msgbox(format("{STR_VAR_1} is now frozen."), MSGBOX_DEFAULT)

                case 4:
                    msgbox(format("{STR_VAR_1} is now burnt."), MSGBOX_DEFAULT)
            }

        case 5:
            setvar(VAR_0x8004, 255)

            random(5)
            copyvar(VAR_0x8005, VAR_RESULT)

            special(Rogue_ApplyStatusToMon)

            switch(var(VAR_0x8005))
            {
                case 0:
                    msgbox(format("All of your POKéMON are now poisoned."), MSGBOX_DEFAULT)

                case 1:
                    msgbox(format("All of your POKéMON are now paralyzed."), MSGBOX_DEFAULT)

                case 2:
                    msgbox(format("All of your POKéMON are now sleeping."), MSGBOX_DEFAULT)

                case 3:
                    msgbox(format("All of your POKéMON are now frozen."), MSGBOX_DEFAULT)

                case 4:
                    msgbox(format("All of your POKéMON are now burnt."), MSGBOX_DEFAULT)
            }

        // Pad out the bottom with lesser bad things
        case 6:
            removemoney(100)
            msgbox(format("You just lost ¥100."), MSGBOX_DEFAULT)

        case 7:
        case 8:
            removemoney(1000)
            msgbox(format("You just lost ¥1000."), MSGBOX_DEFAULT)
    }

    call(Rogue_Encounter_GameShow_NextRound)
}

script Rogue_Encounter_GameShow_ChooseLeft
{
    lock

    turnobject(NPC_HOST, DIR_WEST)

    msgbox(format("So you pick the LEFT?"), MSGBOX_YESNO)
    if(var(VAR_RESULT) == YES)
    {
        msgbox(format("The LEFT it is!"), MSGBOX_DEFAULT)

        if(var(VAR_GOOD_BOX) == 0)
        {
            call(Rogue_Encounter_GameShow_DisplayGood)
        }
        else
        {
            call(Rogue_Encounter_GameShow_DisplayBad)
        }
    }

    release
}

script Rogue_Encounter_GameShow_ChooseRight
{
    lock

    turnobject(NPC_HOST, DIR_EAST)

    msgbox(format("So you pick the RIGHT?"), MSGBOX_YESNO)
    if(var(VAR_RESULT) == YES)
    {
        msgbox(format("The RIGHT it is!"), MSGBOX_DEFAULT)

        if(var(VAR_GOOD_BOX) == 0)
        {
            call(Rogue_Encounter_GameShow_DisplayBad)
        }
        else
        {
            call(Rogue_Encounter_GameShow_DisplayGood)
        }
    }

    release
}

movement GameShow_BoxFall {
    walk_faster_down * 6
}

movement GameShow_Host_Spin
{
    face_right
    delay_1

    face_up
    delay_1

    face_left
    delay_1

    face_down
    delay_1
    
    face_right
    delay_1

    face_up
    delay_1

    face_left
    delay_1

    face_down
    delay_1

    jump_in_place_down
}

movement GameShow_Host_Exit {
    jump_2_up * 2
}